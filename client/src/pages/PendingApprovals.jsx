import { useState, useEffect } from 'react'
import { motion } from 'framer-motion'
import api from '../services/api'

const PendingApprovals = () => {
  const [pendingTimetables, setPendingTimetables] = useState([])
  const [selectedTimetable, setSelectedTimetable] = useState(null)
  const [timetableDetails, setTimetableDetails] = useState(null)
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    fetchPendingTimetables()
  }, [])

  const fetchPendingTimetables = async () => {
    try {
      setLoading(true)
      const response = await api.get('/hod/pending-timetables')
      setPendingTimetables(response.data)
    } catch (error) {
      console.error('Error fetching pending timetables:', error)
    } finally {
      setLoading(false)
    }
  }

  const handleViewTimetable = async (timetableId) => {
    try {
      const response = await api.get(`/hod/timetables/${timetableId}`)
      setTimetableDetails(response.data)
      setSelectedTimetable(timetableId)
    } catch (error) {
      console.error('Error fetching timetable details:', error)
    }
  }

  const handleApproval = async (timetableId, status) => {
    try {
      await api.patch(`/hod/timetables/${timetableId}/status`, { status })
      setSelectedTimetable(null)
      setTimetableDetails(null)
      fetchPendingTimetables()
    } catch (error) {
      console.error('Error updating timetable status:', error)
    }
  }

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      className="space-y-6"
    >
      <h1 className="text-3xl font-bold text-gray-900">Pending Approvals</h1>

      {loading ? (
        <div className="flex items-center justify-center py-8">
          <div className="w-8 h-8 border-4 border-primary-600 border-t-transparent rounded-full animate-spin"></div>
          <span className="ml-2 text-gray-600">Loading pending approvals...</span>
        </div>
      ) : pendingTimetables.length > 0 ? (
        <div className="grid gap-4">
          {pendingTimetables.map((timetable) => (
            <motion.div
              key={timetable._id}
              initial={{ opacity: 0, scale: 0.95 }}
              animate={{ opacity: 1, scale: 1 }}
              className="card border-l-4 border-l-yellow-500"
            >
              <div className="flex justify-between items-start">
                <div className="flex-1">
                  <div className="flex items-center gap-2 mb-2">
                    <h3 className="text-xl font-semibold text-gray-900">
                      {timetable.sectionId?.sectionName || 'Unknown Section'}
                    </h3>
                    <span className="bg-yellow-100 text-yellow-800 px-2 py-1 rounded-full text-xs font-medium">
                      PENDING
                    </span>
                  </div>
                  
                  <div className="grid grid-cols-2 gap-4 text-sm text-gray-600">
                    <div>
                      <p><span className="font-medium">Generated by:</span> {timetable.generatedBy?.name}</p>
                      <p><span className="font-medium">Academic Year:</span> {timetable.academicYear}</p>
                    </div>
                    <div>
                      <p><span className="font-medium">Semester:</span> {timetable.semester}</p>
                      <p><span className="font-medium">Created:</span> {new Date(timetable.createdAt).toLocaleDateString()}</p>
                    </div>
                  </div>
                  
                  <div className="mt-3 flex items-center gap-4 text-sm">
                    <span className="bg-blue-100 text-blue-800 px-2 py-1 rounded">
                      üìÖ {timetable.slots?.length || 0} Time Slots
                    </span>
                    <span className="bg-purple-100 text-purple-800 px-2 py-1 rounded">
                      üè¢ Department: {timetable.sectionId?.departmentId?.name || 'N/A'}
                    </span>
                  </div>
                </div>
                
                <div className="flex flex-col gap-2 ml-4">
                  <button
                    onClick={() => handleViewTimetable(timetable._id)}
                    className="btn-secondary text-sm"
                  >
                    üìã Review Details
                  </button>
                  <button
                    onClick={() => handleApproval(timetable._id, 'APPROVED')}
                    className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors"
                  >
                    ‚úÖ Approve
                  </button>
                  <button
                    onClick={() => handleApproval(timetable._id, 'REJECTED')}
                    className="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors"
                  >
                    ‚ùå Reject
                  </button>
                </div>
              </div>
            </motion.div>
          ))}
        </div>
      ) : (
        <div className="text-center py-12">
          <div className="w-24 h-24 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center">
            <span className="text-4xl">üìã</span>
          </div>
          <h3 className="text-lg font-medium text-gray-900 mb-2">No Pending Approvals</h3>
          <p className="text-gray-600 mb-4">All timetables have been reviewed and processed.</p>
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 max-w-md mx-auto">
            <p className="text-sm text-blue-800">
              üí° <strong>Tip:</strong> New timetables generated by admins will appear here for your review.
            </p>
          </div>
        </div>
      )}

      {selectedTimetable && timetableDetails && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <motion.div
            initial={{ opacity: 0, scale: 0.95 }}
            animate={{ opacity: 1, scale: 1 }}
            className="bg-white rounded-xl shadow-2xl w-full max-w-6xl max-h-[90vh] overflow-hidden"
          >
            <div className="bg-gradient-to-r from-primary-600 to-primary-700 text-white p-6">
              <h2 className="text-2xl font-bold">üìã Timetable Review</h2>
              <p className="text-primary-100 mt-1">
                Section: {timetableDetails.timetable?.sectionId?.sectionName} | 
                Academic Year: {timetableDetails.timetable?.academicYear} | 
                Semester: {timetableDetails.timetable?.semester}
              </p>
            </div>
            
            <div className="p-6 overflow-y-auto max-h-[60vh]">
              <div className="grid grid-cols-5 gap-4">
                {['MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY'].map(day => (
                  <div key={day} className="bg-gray-50 rounded-lg p-4">
                    <h3 className="font-bold text-center text-gray-800 mb-3 bg-white py-2 rounded">{day}</h3>
                    <div className="space-y-2">
                      {[1,2,3,4,5,6].map(period => {
                        const slot = timetableDetails.slots.find(s => s.day === day && s.period === period)
                        return (
                          <div key={period} className="bg-white border rounded p-2 text-xs">
                            <div className="font-medium text-primary-600">Period {period}</div>
                            {slot ? (
                              <>
                                <div className="font-semibold text-gray-800">{slot.subjectId?.name}</div>
                                <div className="text-gray-600">{slot.staffId?.name}</div>
                                <div className="text-gray-500">{slot.room}</div>
                              </>
                            ) : (
                              <div className="text-gray-400 italic">Free</div>
                            )}
                          </div>
                        )
                      })}
                    </div>
                  </div>
                ))}
              </div>
            </div>
            
            <div className="bg-gray-50 px-6 py-4 flex justify-between items-center">
              <div className="text-sm text-gray-600">
                Total Slots: {timetableDetails.slots?.length || 0} | 
                Generated by: {timetableDetails.timetable?.generatedBy?.name}
              </div>
              <div className="flex gap-3">
                <button 
                  onClick={() => setSelectedTimetable(null)} 
                  className="btn-secondary"
                >
                  Close
                </button>
                <button
                  onClick={() => handleApproval(selectedTimetable, 'REJECTED')}
                  className="bg-red-600 hover:bg-red-700 text-white px-6 py-2 rounded-lg font-medium transition-colors"
                >
                  ‚ùå Reject
                </button>
                <button
                  onClick={() => handleApproval(selectedTimetable, 'APPROVED')}
                  className="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg font-medium transition-colors"
                >
                  ‚úÖ Approve
                </button>
              </div>
            </div>
          </motion.div>
        </div>
      )}
    </motion.div>
  )
}

export default PendingApprovals